package countbits

/*
 * Напишите функцию, которая принимает целое число в качестве входных данных и возвращает количество битов, которые
 * равны единице в двоичном представлении этого числа. Вы можете гарантировать, что входные данные неотрицательны.
 *
 * Пример: Двоичное представление "1234" равно , поэтому в этом случае "10011010010" функция должна вернуть "5"
 */
func CountBits(n uint) int {
	// Объявляем общий счётчик битов, которые в двоичном представлении равны единице
	count := 0

	for n > 0 {
		// С помощью операции побитового "И" проверяем наличие битовых единиц в
		// представлении числа. Данное условие обеспечивает наличие хотя бы одного бита в числе
		if n&1 == 1 {
			count++
		}

		// С помощью операции побитового сдвига вправо, отсекаем один разряд.
		// В конечном итоге у нас останется либо одна единица, либо ноль, который не пройдет условие, что
		// будет означать завершение цикла и соответственно окончание выполнения функции.
		n = n >> 1
	}

	return count
}
